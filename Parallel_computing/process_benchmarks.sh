#!/bin/bash

# Files generated by benchmark.sh
files=("test_time_report/serial.time" "test_time_report/p4.time" "test_time_report/p8.time" "test_time_report/p16.time" "test_time_report/p36.time")
procs=(1 4 8 16 36)

# Output CSV file
output="test_time_report/benchmark_results.csv"

echo "Processes,Runtime_seconds,Speedup" > $output

# Extract real time from each .time file and compute speedup relative to serial
serial_time=0

for i in "${!files[@]}"; do
  file="${files[$i]}"
  proc="${procs[$i]}"

  # Extract the real time line, e.g. "real 0m2.345s"
  time_str=$(grep "^real" "$file" | head -n 1 | awk '{print $2}')

  # Check if the time string is valid
  if [[ ! $time_str =~ ^[0-9]+m[0-9.]+s$ ]]; then
    echo "Error: Invalid time format in $file: $time_str"
    echo "$proc,," >> $output
    continue
  fi

  # Convert "0m2.345s" to seconds
  # Parse minutes and seconds separately
  min=$(echo "$time_str" | cut -dm -f1)
  sec=$(echo "$time_str" | cut -dm -f2 | sed 's/s//')

  # Total time in seconds
  total_sec=$(echo "$min * 60 + $sec" | bc -l)
  total_sec=$(printf "%.2f" "$total_sec")

  if [ "$proc" -eq 1 ]; then
    serial_time=$total_sec
    speedup=1.00
  else
    # Calculate speedup = serial_time / current_time
    speedup=$(echo "scale=6; $serial_time / $total_sec" | bc -l)
    speedup=$(printf "%.2f" "$speedup")
  fi
  
  # Output CSV line
  echo "$proc,$total_sec,$speedup" >> $output
done

echo "Benchmark results saved in $output"